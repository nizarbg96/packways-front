{"version":3,"sources":["webpack:///./src/app/layout/adresses/adresses.service.ts","webpack:///./src/app/layout/users/users.service.ts","webpack:///./src/app/login/login.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport {environment} from '../../../environments/environment';\n\n\n@Injectable()\nexport class AdresseService {\n  // items: any[];\n  // jsonObj: any;\n  auth: string;\n  id: any;\n  // result: any;\n  currentUser: any;\n  constructor(public http: Http) { }\n  url = environment.serverUrl + '/adress';\n  jwt = JSON.parse(localStorage.getItem('currentUser')).token;\n  headerOptions = new  Headers({\n    'Content-Type':  'application/json',\n    'Access-Control-Allow-Credentials' : 'true',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, POST, PATCH, DELETE, PUT, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With',\n    'Authorization': `Bearer ${this.jwt}`\n  });\n\n\n\n  getAdressByUser(id): Observable<any> {\n    return this.http.get(`${this.url}/byuser?id=` + id,{headers: this.headerOptions});\n  }\n\n  addadress (latpos, lngpos, createdby, updateby, labelAdr, contactAdr, mobileAdr, typeAdr, sharedtoAdr, userAdr, cityAdr, imgAdr) {\n    const date = new Date();\n    const headers = new Headers();\n    headers.append('Accept', 'application/json');\n    headers.append('Content-Type', 'application/json' );\n    const options = new RequestOptions({ headers: headers });\n\n    const adressdata = {\n      geolocAdr: {\n      lat: latpos,\n      lng: lngpos\n      },\n      updateday: date,\n      createdby: createdby,\n      updateby: updateby,\n      createdday: date,\n      contactAdr: contactAdr,\n      labelAdr: labelAdr,\n      mobileAdr: mobileAdr,\n      typeAdr: typeAdr,\n      sharedtoAdr: sharedtoAdr,\n      userAdr: userAdr,\n      cityAdr: cityAdr,\n      imgAdr: imgAdr,\n      deletedbyUser: false\n        };\n\n\t\t this.http.post(this.url + '/add', adressdata , {headers: this.headerOptions}).subscribe(data => {\n      console.log(data['_body']);\n     }, error => {\n      console.log(error); // Error getting the data\n    });\n\n  }\n\n  getAdresses() {\n    let jsonObjAdr: any = null;\n    const itemsAdr: any = [];\n    let result: any;\n    this.auth = localStorage.getItem('auth');\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (this.auth === 'admin') {\n        this.id = 'Admin';\n    } else {\n        this.id = this.currentUser.data[0].idUser;\n    }\n    this.getAdressByUser(this.id).subscribe(data => {\n        result = data['_body'];\n\n        const jo = JSON.parse(result);\n        const obj = Array.of(jo.data);\n        jsonObjAdr = obj[0];\n        for (let index = 0; index < jsonObjAdr.length; index++) {\n          itemsAdr.push(jsonObjAdr[index]);\n        }\n    });\n    return itemsAdr;\n}\n\ngetAdressesForUser(id) {\n  let jsonObjAdr: any = null;\n  const itemsAdr: any = [];\n  let result: any;\n  this.getAdressByUser(id).subscribe(data => {\n      result = data['_body'];\n\n      const jo = JSON.parse(result);\n      const obj = Array.of(jo.data);\n      jsonObjAdr = obj[0];\n      for (let index = 0; index < jsonObjAdr.length; index++) {\n        itemsAdr.push(jsonObjAdr[index]);\n      }\n  });\n  return itemsAdr;\n}\n\n\ndeleteAdr(idAdr) {\n  const headers = new Headers();\n  headers.append('Accept', 'application/json');\n  headers.append('Content-Type', 'application/json' );\n  const options = new RequestOptions({ headers: headers });\n\n  const adrdata = {\n    deletedbyUser : true\n  };\n  this.http.put(this.url + '/update/' + idAdr, adrdata, {headers: this.headerOptions}).subscribe(data => {\n      console.log('Adresse deleted');\n    }, error => {\n  });\n\n}\n\n\n}\n","import { Injectable } from '@angular/core';\r\n// import { HttpClient } from '@angular/common/http';\r\nimport { Http, RequestOptions, Headers } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  public url = environment.serverUrl + '/user/';\r\n  public urlTrip = environment.serverUrl + '/trip/';\r\n  result: any;\r\n  jsonObj: any;\r\n  items: any;\r\n  tripsByUserAndDate: any;\r\n  jwt = JSON.parse(localStorage.getItem('currentUser')).token;\r\n  headerOptions = new  Headers({\r\n    'Content-Type':  'application/json',\r\n    'Access-Control-Allow-Credentials' : 'true',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': 'GET, POST, PATCH, DELETE, PUT, OPTIONS',\r\n    'Access-Control-Allow-Headers': 'Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With',\r\n    'Authorization': `Bearer ${this.jwt}`\r\n  });\r\n\r\n  constructor(public http: Http) { }\r\n\r\n\r\n  getUsersFromServe(key1,key2) {\r\n    return this.http.get(`${this.url}/bykey?keyExp=`+key1+'&keyDes='+key2, {headers: this.headerOptions});\r\n  }\r\n\r\n\r\n  deleteUser(idUser,userdata) {\r\n    const headers = new Headers();\r\n    headers.append('Accept', 'application/json');\r\n    headers.append('Content-Type', 'application/json' );\r\n    const options = new RequestOptions({ headers: headers });\r\n    this.http.put(this.url + 'update/' + idUser, userdata, {headers: this.headerOptions}).subscribe(data => {\r\n      console.log('User deleted');\r\n    }, error => {\r\n    });\r\n\r\n  }\r\n\r\n  BlockUser(idUser,userdata) {\r\n    const headers = new Headers();\r\n    headers.append('Accept', 'application/json');\r\n    headers.append('Content-Type', 'application/json' );\r\n    const options = new RequestOptions({ headers: headers });\r\n    this.http.put(this.url + 'update/' + idUser, userdata, {headers: this.headerOptions}).subscribe(data => {\r\n      console.log('User Blocked');\r\n    }, error => {\r\n    });\r\n\r\n  }\r\n\r\n  gettripLivree(id){\r\n\r\n    this.http.get(this.urlTrip+\"byuser?id=\"+id+\"&statustrip=Livree\",{headers: this.headerOptions}).subscribe(data => {\r\n      this.result = data['_body']\r\n     // console.log(data['_body'])\r\n      let jo = JSON.parse(this.result);\r\n      let obj = Array.of(jo.data);\r\n    })\r\n  }\r\n\r\n  getTripsByUserAndDate(idUser, sDate, eDate) {\r\n    return this.http.get(`${this.urlTrip}bydate/` + idUser + `?d1=`  + sDate + `&d2=` + eDate, {headers: this.headerOptions});\r\n  }\r\n\r\n  updateUser(userdata, id) {\r\n    const headers = new Headers();\r\n    headers.append('Accept', 'application/json');\r\n    headers.append('Content-Type', 'application/json' );\r\n    const options = new RequestOptions({ headers: headers });\r\n    return this.http.put(this.url + '/update/' + id, userdata, {headers: this.headerOptions});\r\n    console.log('updated suscess');\r\n  }\r\n  getActiveUsers(){\r\n    return this.http.get(this.url + 'actives/', {headers: this.headerOptions});\r\n  }\r\n\r\n}\r\n","\nimport { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\nimport { Http, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport {environment} from '../../environments/environment';\n\n\n\n@Injectable()\nexport class LoginService {\n    public userData: any;\n\n  constructor(public http: Http) { }\n  url = environment.serverUrl + '/user/signin';\n  urlA = environment.serverUrl + '/admin/signin';\n\n  loginUser(login, password) {\n\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('cache-control', 'no-cache');\n    return this.http.post(this.url, {login: login, password: password} , {headers: headers});\n  }\n  loginAdmin(email, password) {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('cache-control', 'no-cache');\n    return this.http.post(this.urlA, {login: email, password: password} , {headers: headers});  }\n\n}\n"],"sourceRoot":""}