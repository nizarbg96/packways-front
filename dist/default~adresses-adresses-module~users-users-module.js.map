{"version":3,"sources":["webpack:///./node_modules/ng-auto-complete/fesm5/ng-auto-complete.js","webpack:///./node_modules/ngx-google-places-autocomplete/bundles/ngx-google-places-autocomplete.umd.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/catch.js","webpack:///./node_modules/rxjs-compat/_esm5/add/operator/map.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/catch.js","webpack:///./node_modules/rxjs-compat/_esm5/operator/map.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACoI;AAC/I;AACf;AACgB;AACF;;AAE7C;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,iCAAiC,oBAAoB;AACrD;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI;AACT;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,iCAAiC,oBAAoB;AACrD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,uCAAuC;AACvC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,4BAA4B,aAAa;AACzC,gCAAgC,mBAAmB;AACnD,kCAAkC,kBAAkB;AACpD,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC,4BAA4B,0DAAY;AACxC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE,sDAAQ,GAAG;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB;AACjB;AACA;AACA,sDAAsD;AACtD,SAAS,OAAO,wDAAU;AAC1B,MAAM;AACN;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,kBAAkB,OAAO,mDAAK,EAAE;AAChC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,mBAAmB,OAAO,mDAAK,EAAE;AACjC,eAAe,OAAO,mDAAK,EAAE;AAC7B,sBAAsB,OAAO,mDAAK,EAAE;AACpC,iBAAiB,OAAO,oDAAM,EAAE;AAChC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,kBAAkB,OAAO,oDAAM,EAAE;AACjC,kBAAkB,OAAO,yDAAW,yBAAyB;AAC7D,iBAAiB,OAAO,0DAAY,yCAAyC;AAC7E;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC,4BAA4B,0DAAY;AACxC,4BAA4B,0DAAY;AACxC,iCAAiC,EAAE,OAAO;AAC1C,2BAA2B,4CAAO;AAClC;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC,+BAA+B,EAAE;AACjC,qCAAqC,EAAE;AACvC,kCAAkC,EAAE;AACpC,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,+BAA+B,mEAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,sBAAsB,WAAW;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,uDAAS;AACxB;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,sBAAsB,gBAAgB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,sBAAsB,cAAc;AACzE;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,qHAAqH,uFAAuF,gCAAgC,WAAW,oHAAoH,oCAAoC,sQAAsQ,WAAW,4BAA4B,kJAAkJ,wBAAwB,0PAA0P,4QAA4Q,uBAAuB,wQAAwQ,+BAA+B,khBAAkhB,WAAW,sBAAsB,kKAAkK,4PAA4P,WAAW,8EAA8E;AACptF,iEAAiE,iCAAiC,WAAW,oDAAoD,8BAA8B,WAAW,0DAA0D,mCAAmC,WAAW,0CAA0C,mCAAmC,WAAW,4CAA4C,aAAa,oDAAoD,4BAA4B,WAAW,6DAA6D,4BAA4B,WAAW,yDAAyD,6BAA6B,WAAW;AACnuB,iBAAiB;AACjB;AACA;AACA,qDAAqD;AACrD,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN;AACA,oBAAoB,OAAO,uDAAS,gCAAgC;AACpE,mBAAmB,OAAO,oDAAM,EAAE;AAClC,oBAAoB,OAAO,oDAAM,EAAE;AACnC,oBAAoB,OAAO,oDAAM,wBAAwB;AACzD,iBAAiB,OAAO,mDAAK,EAAE;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA,oCAAoC,4CAAO;AAC3C;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,cAAc,EAAE,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,0EAA0E;AAC1E,iBAAiB;AACjB;AACA;AACA,0DAA0D;AAC1D,SAAS,OAAO,+DAAiB;AACjC,MAAM;AACN;AACA,sBAAsB,OAAO,0DAAY,+BAA+B;AACxE,gBAAgB,OAAO,uDAAS,mBAAmB;AACnD,oBAAoB,OAAO,oDAAM,EAAE;AACnC,oBAAoB,OAAO,oDAAM,wBAAwB;AACzD,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,eAAe,OAAO,mDAAK,EAAE;AAC7B,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iDAAiD;AACjD,0DAA0D,qBAAqB,EAAE;AACjF;AACA;AACA;AACA,yEAAyE,uEAAuE,EAAE;AAClJ;AACA;AACA,SAAS,OAAO,kDAAI;AACpB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,kDAAI;AACpB;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ;AACxB;AACA,wBAAwB,4DAAY;AACpC,wBAAwB,0DAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAEA;AACA;AACA,cAAc,uEAAuE;AACrF;;AAE+Z;;AAE/Z,2CAA2C,cAAc,+orF;;;;;;;;;;;AC56DzD;AACA,CAAC,KAA4D,oBAAoB,mBAAO,CAAC,iEAAe;AACxG,CAAC,SACwJ;AACzJ,CAAC,0CAA0C;;AAE3C;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,mCAAmC,EAAE;AACrC;AACA,qDAAqD,mBAAmB;AACxE;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,uDAAuD;AACvD,SAAS,kCAAkC;AAC3C,SAAS,8BAA8B;AACvC,MAAM;AACN;AACA,qBAAqB,gDAAgD;AACrE,6BAA6B,6BAA6B;AAC1D;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;;AAEA,8CAA8C,cAAc;;AAE5D,CAAC;;;;;;;;;;;;;AChJD;AAAA;AAAA;AAAkC;AACY;AAC9C,+CAAU,mBAAmB,sDAAM;AACnC,+CAAU,oBAAoB,sDAAM;AACpC,iC;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAkC;AACO;AACzC,+CAAU,iBAAiB,iDAAG;AAC9B,+B;;;;;;;;;;;;ACHA;AAAA;AAAA;AAA2D;AACpD;AACP,WAAW,iEAAW;AACtB;AACA,iC;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAuD;AAChD;AACP,WAAW,0DAAc;AACzB;AACA,+B","file":"default~adresses-adresses-module~users-users-module.js","sourcesContent":["import { __awaiter, __generator, __assign } from 'tslib';\nimport { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output, Component, NgZone, ViewChild, ChangeDetectorRef, ViewChildren, Pipe, NgModule } from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AutocompleteItem = /** @class */ (function () {\n    function AutocompleteItem(title, id, original) {\n        this.title = title;\n        this.id = id;\n        this.original = original;\n    }\n    return AutocompleteItem;\n}());\n/**\n *\n * @param {?} items\n * @param {?} titleKey\n * @param {?=} childrenKey\n * @return {?}\n */\nfunction SearchableAutoCompleteItems(items, titleKey, childrenKey) {\n    if (childrenKey === void 0) { childrenKey = null; }\n    return items.reduce(function (r, i) {\n        /** @type {?} */\n        var t = SearchableAutoCompleteString(i[titleKey], i.id);\n        if (typeof r[t] === 'undefined') {\n            r[t] = TransformToAutocompleteItem(i, titleKey, childrenKey);\n        }\n        return r;\n    }, {});\n}\n/**\n *\n * @param {?} key\n * @param {?} id\n * @return {?}\n */\nfunction SearchableAutoCompleteString(key, id) {\n    return key.replace(/ /g, \"_\") + \"_id_\" + String(id);\n}\n/**\n *\n * @param {?} str\n * @return {?}\n */\nfunction ComparableAutoCompleteString(str) {\n    return str.replace(/_/g, \" \");\n}\n/**\n * object must have an ID\n * @param {?} object\n * @param {?} titleKey\n * @param {?=} childrenKey\n * @return {?}\n */\nfunction TransformToAutocompleteItem(object, titleKey, childrenKey) {\n    if (childrenKey === void 0) { childrenKey = null; }\n    /** @type {?} */\n    var item = new AutocompleteItem(object[titleKey], object.id, object);\n    /**\n     * if there are children, add these.\n     */\n    if (childrenKey !== null)\n        item.children = object[childrenKey];\n    return item;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar AutocompleteGroup = /** @class */ (function () {\n    function AutocompleteGroup() {\n        this.async = null;\n        this.removals = [];\n    }\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} value\n     * @param {?} titleKey\n     * @return {?}\n     */\n    AutocompleteGroup.prototype.SetNewValue = /**\n     *\n     * @param {?} value\n     * @param {?} titleKey\n     * @return {?}\n     */\n    function (value, titleKey) {\n        /** @type {?} */\n        var values = SearchableAutoCompleteItems(value, titleKey);\n        this.SetCopy(values);\n        /**\n         *\n         */\n        this.value = this.FilterRemovals(this.removals, values);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} ids\n     * @return {?}\n     */\n    AutocompleteGroup.prototype.Removables = /**\n     *\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        this.removals = ids;\n        /**\n         *\n         */\n        this.value = this.FilterRemovals(this.removals, this._copy);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    AutocompleteGroup.prototype.InitialValue = /**\n     *\n     * @return {?}\n     */\n    function () {\n        this.value = this.FilterRemovals(this.removals, this.initialValue);\n        /**\n         *\n         */\n        this.SetCopy(this.initialValue);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} values\n     * @return {?}\n     */\n    AutocompleteGroup.prototype.SetCopy = /**\n     *\n     * @param {?} values\n     * @return {?}\n     */\n    function (values) {\n        this._copy = Object.assign([], values);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    AutocompleteGroup.prototype.SetValues = /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this.value = SearchableAutoCompleteItems(value, this.keys.titleKey, this.keys.childrenKey);\n        /**\n         *\n         */\n        this.initialValue = Object.assign({}, this.value);\n        this.SetCopy(Object.assign({}, this.value));\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} removals\n     * @param {?} value\n     * @return {?}\n     */\n    AutocompleteGroup.prototype.FilterRemovals = /**\n     *\n     * @param {?} removals\n     * @param {?} value\n     * @return {?}\n     */\n    function (removals, value) {\n        /** @type {?} */\n        var filtered = Object.assign({}, value);\n        /** @type {?} */\n        var key;\n        /** @type {?} */\n        var keys = [];\n        for (key in filtered) {\n            if (filtered.hasOwnProperty(key)) {\n                removals.forEach(function (id) {\n                    // Comparable string and ID\n                    /** @type {?} */\n                    var f = \"_id_\" + String(id);\n                    /** @type {?} */\n                    var c = key.substring(key.indexOf(f), key.length);\n                    if (f === c) {\n                        keys.push(key);\n                    }\n                });\n            }\n        }\n        keys.forEach(function (k) {\n            delete filtered[k];\n        });\n        return filtered;\n    };\n    return AutocompleteGroup;\n}());\n/**\n *\n * @template T\n * @param {?} placeholder\n * @param {?} key\n * @param {?} value\n * @param {?} keys\n * @param {?=} parent\n * @param {?=} completion\n * @param {?=} searchLength\n * @return {?}\n */\nfunction CreateNewAutocompleteGroup(placeholder, key, value, keys, parent, completion, searchLength) {\n    if (parent === void 0) { parent = ''; }\n    if (completion === void 0) { completion = true; }\n    if (searchLength === void 0) { searchLength = 2; }\n    /** @type {?} */\n    var group = new AutocompleteGroup();\n    group.key = key;\n    group.keys = keys;\n    group.placeholder = placeholder;\n    group.parent = parent;\n    group.completion = completion;\n    group.searchLength = searchLength;\n    /**\n     * Initial value needed, if we empty search box or want to clear it, it needs to be reset.\n     * Setting copy, used if user wants to remove values (by id.). This _ list gets filtered.\n     */\n    group.SetValues(value);\n    return group;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nvar UsedCodeList = {\n    ArrowDown: 40,\n    ArrowUp: 38,\n    Enter: 13,\n    Escape: 27,\n    Tab: 9,\n    MetaLeft: 91,\n    AltLeft: 18,\n    ControlLeft: 17,\n    ShiftLeft: 16,\n    ArrowLeft: 37,\n    ArrowRight: 39,\n    MetaRight: 93,\n    AltRight: 18\n};\n/**\n *\n * @param {?} array\n * @return {?}\n */\nfunction ReturnStringArrayByID(array) {\n    return array.reduce(function (result, item) {\n        result.push(item.id.toString());\n        return result;\n    }, []);\n}\n/**\n *\n * @param {?} removals\n * @param {?} list\n * @return {?}\n */\nfunction FilterRemovals(removals, list) {\n    return list.filter(function (item) {\n        return removals.indexOf(item.id.toString()) <= -1;\n    });\n}\n/**\n *\n * @return {?}\n */\nfunction IsMobileOrTablet() {\n    /** @type {?} */\n    var isMobile = false;\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0, 4))) {\n        isMobile = true;\n    }\n    return isMobile;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction NotUsedKey(code) {\n    return typeof UsedCodeList[code] === 'undefined';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgDropdownDirective = /** @class */ (function () {\n    function NgDropdownDirective(_eref) {\n        this._eref = _eref;\n        this.list = [];\n        this.active = null;\n        this.input = null;\n        this.element = null;\n        this.key = '';\n        this.completion = true;\n        this.hover = new EventEmitter();\n        this.selected = new EventEmitter();\n        this.closed = new EventEmitter();\n        this._open = false;\n        this._list = [];\n        this._class = '';\n    }\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.ngOnInit = /**\n     *\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._class = \"dr-item-\" + this.key + \"-\";\n        if (this.RefExists()) {\n            this.input.addEventListener('keydown', function (event) {\n                _this.keyDown(event);\n            });\n        }\n        if (!this.completion) {\n            document.addEventListener('keydown', function (event) {\n                if (_this._open) {\n                    _this.keyDown(event);\n                }\n            });\n        }\n        if (!IsMobileOrTablet()) {\n            this._eref.nativeElement.addEventListener('mouseover', function (event) {\n                _this.OnMouseOver(event);\n            });\n        }\n        /**\n         *\n         */\n        this.PrepareList();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} changes\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.ngOnChanges = /**\n     *\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        if (typeof changes['active'] !== 'undefined' && !changes['active'].firstChange) {\n            this.PrepareList();\n        }\n        if (typeof changes['list'] !== 'undefined') {\n            this.list = changes['list'].currentValue;\n            /**\n             *\n             */\n            this.PrepareList();\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} event\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.keyDown = /**\n     *\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n        /**\n         *\n         */\n        switch (event.code) {\n            case 'ArrowDown':\n                this.Open();\n                /**\n                 *\n                 */\n                this.SetActive(this.FindActive() + 1);\n                this.DropdownFocusAreaDown();\n                event.preventDefault();\n                break;\n            case 'ArrowUp':\n                this.Open();\n                /**\n                 *\n                 */\n                this.SetActive(this.FindActive() - 1);\n                this.DropdownFocusAreaUp();\n                event.preventDefault();\n                break;\n            case 'Enter':\n                this.EmitSelected();\n                this.Close(null, true);\n                event.preventDefault();\n                break;\n            case 'Escape':\n                this.Close(null, true);\n                event.preventDefault();\n                break;\n            case 'Tab':\n                if (!event.shiftKey) {\n                    this.EmitSelected();\n                }\n                this.Close(null, true);\n                break;\n            default:\n                return;\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} event\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.OnMouseOver = /**\n     *\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        // Mouse didn't actually move, so no logic needed.\n        if (event.movementX == 0 && event.movementY == 0) {\n            return;\n        }\n        /**\n         *\n         * @type {?}\n         */\n        var el = event.target || event.srcElement;\n        if (el.id.length > 0 && el.id.includes(this._class)) {\n            this.SetActive(Number(el.id.slice(this._class.length, el.id.length)));\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.EmitSelected = /**\n     *\n     * @return {?}\n     */\n    function () {\n        if (this.FindActive() > -1) {\n            this.selected.emit(this._list[this.FindActive()].key);\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.DropdownFocusAreaDown = /**\n     *\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scroll = this._eref.nativeElement.offsetHeight + this._eref.nativeElement.scrollTop;\n        /**\n         *\n         */\n        if ((this.GetElement(this.FindActive()).offsetTop + this.GetElement(this.FindActive()).offsetHeight) > scroll) {\n            this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetTop - (this._eref.nativeElement.offsetHeight - this.GetElement(this.FindActive()).offsetHeight);\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.DropdownFocusAreaUp = /**\n     *\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */\n        var scroll = this._eref.nativeElement.scrollTop;\n        /**\n         *\n         */\n        if (this.GetElement(this.FindActive()).offsetTop < scroll && scroll > 0) {\n            this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetTop;\n        }\n    };\n    Object.defineProperty(NgDropdownDirective.prototype, \"opened\", {\n        // =======================================================================//\n        // ! Bindings                                                             //\n        // =======================================================================//\n        /**\n         *\n         */\n        get: \n        // =======================================================================//\n        // ! Bindings                                                             //\n        // =======================================================================//\n        /**\n         *\n         * @return {?}\n         */\n        function () {\n            return this._open;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // =======================================================================//\n    // ! Listeners                                                            //\n    // =======================================================================//\n    /**\n     *\n     */\n    // =======================================================================//\n    // ! Listeners                                                            //\n    // =======================================================================//\n    /**\n     *\n     * @param {?} event\n     * @param {?=} force\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.Close = \n    // =======================================================================//\n    // ! Listeners                                                            //\n    // =======================================================================//\n    /**\n     *\n     * @param {?} event\n     * @param {?=} force\n     * @return {?}\n     */\n    function (event, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        if (!this._open) {\n            return;\n        }\n        /** @type {?} */\n        var close = function () {\n            _this._open = false;\n            /**\n             * Emit NULL so listening components know what to do.\n             */\n            _this.ClearActive();\n            _this.hover.emit(null);\n            _this.closed.emit();\n        };\n        if (force) {\n            close();\n            return;\n        }\n        if ((this._open && (!this.element.contains(event.target)))) {\n            close();\n        }\n    };\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    /**\n     *\n     */\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.Open = \n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    /**\n     *\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        setTimeout(function () {\n            if (!_this._open && !_this._eref.nativeElement.classList.contains('is-initial-empty')) {\n                _this._open = true;\n                _this.PrepareList();\n                /**\n                 *\n                 */\n                if (_this.FindActive() < 0) {\n                    _this._eref.nativeElement.scrollTop = 0;\n                }\n                else {\n                    _this._eref.nativeElement.scrollTop = _this.GetElement(_this.FindActive()).offsetHeight * _this.FindActive();\n                }\n            }\n        }, 0);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.RefExists = /**\n     *\n     * @return {?}\n     */\n    function () {\n        return typeof this.input !== 'undefined';\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.FindActive = /**\n     *\n     * @return {?}\n     */\n    function () {\n        return this._list.reduce(function (result, item, index) {\n            if (item.active) {\n                result = index;\n            }\n            return result;\n        }, -1);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} index\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.SetActive = /**\n     *\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index > this._list.length - 1 || index < 0)\n            return;\n        /**\n         *\n         */\n        this.ClearActive();\n        this._list[index].active = true;\n        this.hover.emit(this._list[index].key);\n        /**\n         *\n         */\n        this.GetElement(index).classList.add('active');\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} index\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.GetElement = /**\n     *\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        return this._eref.nativeElement.children[index];\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.ClearActive = /**\n     *\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._list.forEach(function (item, index) {\n            item.active = false;\n            /**\n             *\n             */\n            _this.GetElement(index).classList.remove('active');\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.PrepareList = /**\n     *\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._list = Object.keys(this.list).map(function (key) {\n            return {\n                key: key,\n                active: _this.ActiveItem(key)\n            };\n        });\n        /**\n         *\n         */\n        this.PrepareChildrenList();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} item\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.ActiveItem = /**\n     *\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        return this.active !== null && item === this.active;\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.DetermineActiveClass = /**\n     *\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._list.forEach(function (item, index) {\n            if (typeof _this.GetElement(index) === 'undefined') {\n                return;\n            }\n            /**\n             *\n             */\n            _this.GetElement(index).classList.remove('active');\n            if (item.active)\n                _this.GetElement(index).classList.add('active');\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.PrepareChildrenList = /**\n     *\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        /** @type {?} */\n        var list = this._eref.nativeElement.children;\n        setTimeout(function () {\n            for (var i = 0; i < list.length; i++) {\n                list[i].id = _this._class + i;\n            }\n        }, 0);\n        /**\n         *\n         */\n        this.DetermineActiveClass();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} object\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.DeReference = /**\n     *\n     * @param {?} object\n     * @return {?}\n     */\n    function (object) {\n        var item = object.item;\n        /**\n         *\n         */\n        return Object.assign({}, __assign({}, item));\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.ngOnDestroy = /**\n     *\n     * @return {?}\n     */\n    function () {\n        if (this.RefExists()) {\n            this.wheelHandler = this.removeEventListner.bind(this.input);\n            // this.input.removeEventListener('keydown');\n        }\n        if (!this.completion) {\n            this.wheelHandler = this.removeEventListner.bind(document);\n            // document.removeEventListener('keydown');\n        }\n        if (!IsMobileOrTablet()) {\n            this.wheelHandler = this.removeEventListner.bind(this._eref);\n            // this._eref.nativeElement.removeEventListener('mouseover');\n        }\n    };\n    /**\n     * @param {?} elem\n     * @return {?}\n     */\n    NgDropdownDirective.prototype.removeEventListner = /**\n     * @param {?} elem\n     * @return {?}\n     */\n    function (elem) {\n        elem.removeEventListener('wheel', this.wheelHandler, true);\n    };\n    NgDropdownDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[ngDropdown]'\n                },] }\n    ];\n    /** @nocollapse */\n    NgDropdownDirective.ctorParameters = function () { return [\n        { type: ElementRef }\n    ]; };\n    NgDropdownDirective.propDecorators = {\n        list: [{ type: Input }],\n        active: [{ type: Input }],\n        input: [{ type: Input }],\n        element: [{ type: Input }],\n        key: [{ type: Input }],\n        completion: [{ type: Input }],\n        hover: [{ type: Output }],\n        selected: [{ type: Output }],\n        closed: [{ type: Output }],\n        opened: [{ type: HostBinding, args: ['class.open',] }],\n        Close: [{ type: HostListener, args: ['document:click', ['$event'],] }]\n    };\n    return NgDropdownDirective;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar CompleterComponent = /** @class */ (function () {\n    function CompleterComponent(_zone) {\n        this._zone = _zone;\n        this.cleared = new EventEmitter();\n        this.selected = new EventEmitter();\n        this.noResult = new EventEmitter();\n        this.group = (/** @type {?} */ ({}));\n        this._change = new Subject();\n        this._items = {};\n        this._completer = '';\n        this._highlight = '';\n        this._DOM = {\n            notFound: (/** @type {?} */ (false)),\n            empty: (/** @type {?} */ (false)),\n            placeholder: (/** @type {?} */ (null)),\n            selected: (/** @type {?} */ ('')),\n            isLoading: (/** @type {?} */ (false))\n        };\n    }\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.ngOnInit = /**\n     *\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._zone.runOutsideAngular(function () {\n            _this._change.pipe(debounceTime(300))\n                .subscribe(function (value) {\n                _this._zone.run(function () {\n                    if (_this.group.async !== null) {\n                        _this.RunAsyncFunction(value);\n                    }\n                    else {\n                        _this.OnModelChange(value);\n                    }\n                });\n            });\n        });\n        this.SetItems();\n    };\n    /**\n     * Only used when completion is off.\n     */\n    /**\n     * Only used when completion is off.\n     * @return {?}\n     */\n    CompleterComponent.prototype.RegisterClick = /**\n     * Only used when completion is off.\n     * @return {?}\n     */\n    function () {\n        if (!this.group.completion) {\n            this.SwitchDropdownState();\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.DropdownArray = /**\n     *\n     * @return {?}\n     */\n    function () {\n        if (this.group.completion) {\n            this.SwitchDropdownState();\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.SwitchDropdownState = /**\n     *\n     * @return {?}\n     */\n    function () {\n        if (this.dropdown._open) {\n            this.CloseDropdown();\n            return;\n        }\n        /**\n         *\n         */\n        this.OpenDropdown();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.CloseDropdown = /**\n     *\n     * @return {?}\n     */\n    function () {\n        this.dropdown._open = false;\n        /**\n         *\n         */\n        this._DOM.placeholder = null;\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.OpenDropdown = /**\n     *\n     * @return {?}\n     */\n    function () {\n        this.dropdown.Open();\n        /**\n         *\n         */\n        this._DOM.placeholder = null;\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.SetItems = /**\n     *\n     * @return {?}\n     */\n    function () {\n        this._items = this.group.value;\n        this.IsInitialEmpty();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} item\n     * @return {?}\n     */\n    CompleterComponent.prototype.SelectItem = /**\n     *\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        /** @type {?} */\n        var i;\n        if (typeof item === 'string') {\n            i = this._items[item];\n            this._DOM.selected = item;\n        }\n        else {\n            i = item;\n            this._DOM.selected = SearchableAutoCompleteString(item.title, item.id);\n        }\n        this._completer = i.title;\n        this._highlight = '';\n        this.dropdown.Close(null, true);\n        this.selected.emit({ group: { key: this.group.key }, item: i });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    CompleterComponent.prototype.RunAsyncFunction = /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var values;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._completer = value;\n                        this._highlight = value;\n                        this._DOM.selected = null;\n                        if (!(value.length === 0)) return [3 /*break*/, 1];\n                        this.group.InitialValue();\n                        this.ClearModel();\n                        this.dropdown.Close('', true);\n                        return [3 /*break*/, 3];\n                    case 1:\n                        if (!(value.length > this.group.searchLength)) return [3 /*break*/, 3];\n                        this._DOM.isLoading = true;\n                        return [4 /*yield*/, this.group.async(value)];\n                    case 2:\n                        values = _a.sent();\n                        this.group.SetNewValue(values, this.group.keys.titleKey);\n                        this._DOM.isLoading = false;\n                        this._items = this.group.value;\n                        this.EmptySearch(this._items, value);\n                        // User has typed something now, results could be shown. We need to remove the \"is-initial-empty\" class.\n                        this.IsInitialEmpty();\n                        this.dropdown.Open();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    CompleterComponent.prototype.OnModelChange = /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        this._completer = value;\n        this._highlight = value;\n        this._DOM.selected = null;\n        if (value.length === 0) {\n            this.ClearModel();\n            this.dropdown.Close('', true);\n        }\n        else if (value.length > this.group.searchLength) {\n            this.CompareItemsAndSet(value);\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.ClearModel = /**\n     *\n     * @return {?}\n     */\n    function () {\n        this._DOM.selected = null;\n        this._DOM.notFound = false;\n        this.cleared.emit(this.group.key);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    CompleterComponent.prototype.CompareItemsAndSet = /**\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        /** @type {?} */\n        var obj = {};\n        for (var key in this.group.value) {\n            if (ComparableAutoCompleteString(key).toLowerCase().indexOf(value.toLowerCase()) > -1) {\n                obj[key] = this.group.value[key];\n            }\n        }\n        this._items = obj;\n        this.EmptySearch(this._items, value);\n        // User has typed something now, results could be shown. We need to remove the \"is-initial-empty\" class.\n        this.IsInitialEmpty();\n        this.dropdown.Open();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.OnInputBlurred = /**\n     *\n     * @return {?}\n     */\n    function () {\n        if (!this.HasChosenValue()) {\n            /**\n             * Let component know completer input has been cleared -\n             * this function shows the list again, also resets children, if chosen.\n             */\n            this.OnModelChange('');\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} item\n     * @return {?}\n     */\n    CompleterComponent.prototype.OnHoverDropdownItem = /**\n     *\n     * @param {?} item\n     * @return {?}\n     */\n    function (item) {\n        if (typeof item == 'string') {\n            this._DOM.placeholder = this._items[item];\n            return;\n        }\n        if (item == null) {\n            this._DOM.placeholder = null;\n            return;\n        }\n        this._DOM.placeholder = item;\n    };\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    /**\n     * @return {?}\n     */\n    CompleterComponent.prototype.IsInitialEmpty = \n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    /**\n     * @return {?}\n     */\n    function () {\n        if (Object.keys(this._items).length === 0 && this._completer.length === 0) {\n            this._DOM.empty = true;\n            return;\n        }\n        this._DOM.empty = false;\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.HasChosenValue = /**\n     *\n     * @return {?}\n     */\n    function () {\n        return this._DOM.selected !== null;\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} obj\n     * @param {?} query\n     * @return {?}\n     */\n    CompleterComponent.prototype.EmptySearch = /**\n     *\n     * @param {?} obj\n     * @param {?} query\n     * @return {?}\n     */\n    function (obj, query) {\n        if (Object.keys(obj).length > 0) {\n            this._DOM.notFound = false;\n            return;\n        }\n        this._DOM.notFound = true;\n        this.noResult.emit({ group: { key: this.group.key }, query: query });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    CompleterComponent.prototype.ClearValue = /**\n     *\n     * @return {?}\n     */\n    function () {\n        this._completer = '';\n        this._DOM.selected = null;\n        this.group.InitialValue();\n        this.IsInitialEmpty();\n        /**\n         *\n         */\n        this.selected.emit({ group: { key: this.group.key }, item: null });\n    };\n    CompleterComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ng-completer',\n                    template: \"\\n        <div #element class=\\\"ng-autocomplete-dropdown\\\"\\n             [ngClass]=\\\"{'open': dropdown._open, 'is-loading': _DOM.isLoading, 'is-async': group.async !== null}\\\">\\n\\n            <!--GROUP: {{group.key}}-->\\n\\n            <div class=\\\"ng-autocomplete-inputs\\\" (click)=\\\"RegisterClick()\\\"\\n                 [ngClass]=\\\"{'completion-off': !group.completion}\\\">\\n                <span class=\\\"ng-autocomplete-placeholder\\\"\\n                      *ngIf=\\\"_DOM.placeholder\\\">\\n                  <ng-container *ngIf=\\\"group.placeholderValue\\\">\\n                      <ng-template *ngTemplateOutlet=\\\"group.placeholderValue; context: {$implicit: _DOM.placeholder}\\\"></ng-template>\\n                  </ng-container>\\n                  <ng-template [ngIf]=\\\"!group.placeholderValue\\\">\\n                      {{_DOM.placeholder.title}}\\n                  </ng-template>\\n                </span>\\n                <input #input type=\\\"text\\\" [placeholder]=\\\"group.placeholder\\\" name=\\\"completer\\\" [(ngModel)]=\\\"_completer\\\"\\n                       (ngModelChange)=\\\"_change.next($event);\\\"\\n                       [value]=\\\"_completer\\\"\\n                       autocomplete=\\\"off\\\"\\n                       (click)=\\\"OpenDropdown()\\\"\\n                       (focus)=\\\"OpenDropdown()\\\" class=\\\"ng-autocomplete-input\\\">\\n\\n                <span [ngClass]=\\\"{'open': dropdown._open}\\\" class=\\\"ng-autocomplete-dropdown-icon\\\"\\n                      (click)=\\\"DropdownArray()\\\"></span>\\n            </div>\\n\\n            <div class=\\\"ng-dropdown\\\" ngDropdown [list]=\\\"_items\\\" [element]=\\\"element\\\" [input]=\\\"input\\\"\\n                 [ngClass]=\\\"{'is-initial-empty': _DOM.empty}\\\"\\n                 [active]=\\\"_DOM.selected\\\" [key]=\\\"group.key\\\"\\n                 [completion]=\\\"group.completion\\\"\\n                 (hover)=\\\"OnHoverDropdownItem($event)\\\"\\n                 (selected)=\\\"SelectItem($event)\\\"\\n                 (closed)=\\\"OnInputBlurred()\\\"\\n            >\\n                <div *ngIf=\\\"_DOM.notFound && group.noResults\\\" class=\\\"dropdown-item no-results\\\">\\n                    <ng-container *ngIf=\\\"group.noResults\\\">\\n                        <ng-template *ngTemplateOutlet=\\\"group.noResults; context: {$implicit: _completer}\\\"></ng-template>\\n                    </ng-container>\\n                </div>\\n\\n                <div class=\\\"dropdown-item\\\" *ngFor=\\\"let item of _items | keys; let i = index\\\"\\n                     (click)=\\\"SelectItem(_items[item])\\\">\\n\\n                    <ng-container *ngIf=\\\"group.dropdownValue\\\">\\n                        <ng-template\\n                            *ngTemplateOutlet=\\\"group.dropdownValue; context: {$implicit: _items[item], highlight: _items[item].title | highlight:_highlight}\\\"></ng-template>\\n                    </ng-container>\\n\\n                    <div *ngIf=\\\"!group.dropdownValue\\\" [innerHTML]=\\\"_items[item].title | highlight:_highlight\\\"></div>\\n                </div>\\n            </div>\\n        </div>\",\n                    styles: [\"\\n        .ng-autocomplete-inputs {\\n            position: relative;\\n        }\\n\\n        .ng-autocomplete-inputs.completion-off {\\n            cursor: pointer;\\n        }\\n\\n        .ng-autocomplete-inputs.completion-off input {\\n            pointer-events: none;\\n        }\\n\\n        .ng-autocomplete-placeholder {\\n            pointer-events: none;\\n        }\\n\\n        .ng-autocomplete-dropdown-icon {\\n\\n        }\\n\\n        .ng-autocomplete-dropdown .ng-dropdown {\\n            display: none;\\n        }\\n\\n        .ng-autocomplete-dropdown .ng-dropdown.is-empty {\\n            display: none;\\n        }\\n\\n        .ng-autocomplete-dropdown .ng-dropdown.open {\\n            display: block;\\n        }\\n    \"]\n                }] }\n    ];\n    /** @nocollapse */\n    CompleterComponent.ctorParameters = function () { return [\n        { type: NgZone }\n    ]; };\n    CompleterComponent.propDecorators = {\n        dropdown: [{ type: ViewChild, args: [NgDropdownDirective,] }],\n        cleared: [{ type: Output }],\n        selected: [{ type: Output }],\n        noResult: [{ type: Output, args: ['no-result',] }],\n        group: [{ type: Input }]\n    };\n    return CompleterComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgAutoCompleteComponent = /** @class */ (function () {\n    function NgAutoCompleteComponent(cdr) {\n        this.cdr = cdr;\n        this.selected = new EventEmitter();\n        this.noResult = new EventEmitter();\n        this.group = [];\n        this.key = '';\n        this.classes = [];\n        this._viewHasBeenInit = false;\n        this._viewInitSubject = new Subject();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.ngOnInit = /**\n     *\n     * @return {?}\n     */\n    function () {\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.ngAfterViewChecked = /**\n     *\n     * @return {?}\n     */\n    function () {\n        if (!this._viewHasBeenInit) {\n            /** @type {?} */\n            var el = this.init.nativeElement.querySelector('.after-view-init');\n            if (window.getComputedStyle(el).length > 0) {\n                this._viewHasBeenInit = true;\n                this._viewInitSubject.next(true);\n            }\n        }\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} selected\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.ListenToSelected = /**\n     *\n     * @param {?} selected\n     * @return {?}\n     */\n    function (selected) {\n        this.selected.emit(selected);\n        /**\n         *\n         */\n        this.SetChildren(selected);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} group\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.NoResult = /**\n     *\n     * @param {?} group\n     * @return {?}\n     */\n    function (group) {\n        this.noResult.emit(group);\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} key\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.InputCleared = /**\n     *\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        var _this = this;\n        this.group.forEach(function (group) {\n            if (group.key === key || group.parent === key) {\n                _this.ResetInput(group.key);\n            }\n        });\n        /**\n         * Items may have changed, need to te re-set list in completer components.\n         */\n        this.TriggerChange();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} selected\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.SetChildren = /**\n     *\n     * @param {?} selected\n     * @return {?}\n     */\n    function (selected) {\n        var _this = this;\n        this.group.forEach(function (item) {\n            if (item.parent == selected.group.key) {\n                _this.ResetInput(item.key);\n                /**\n                 *\n                 */\n                if (selected.item !== null && typeof selected.item.children !== 'undefined') {\n                    item.SetNewValue(selected.item.children, selected.group.keys.titleKey);\n                }\n            }\n        });\n        /**\n         * Items may have changed, need to te re-set list in completer components.\n         */\n        this.TriggerChange();\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.TriggerChange = /**\n     *\n     * @return {?}\n     */\n    function () {\n        this.completers.forEach(function (completer) {\n            completer.SetItems();\n        });\n    };\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    /**\n     *\n     */\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    /**\n     *\n     * @param {?} key\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.GetInput = \n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n    /**\n     *\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return this.completers.reduce(function (result, completer) {\n            if (completer.group.key === key) {\n                result = completer;\n            }\n            return result;\n        }, (/** @type {?} */ ({})));\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} key\n     * @param {?} f\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.SubscribeInput = /**\n     *\n     * @param {?} key\n     * @param {?} f\n     * @return {?}\n     */\n    function (key, f) {\n        var _this = this;\n        if (this._viewHasBeenInit) {\n            /** @type {?} */\n            var completer = this.GetInput(key);\n            /**\n             *\n             */\n            f(completer);\n            return;\n        }\n        this._viewInitSubject.subscribe(function (_bool) {\n            /** @type {?} */\n            var completer = _this.GetInput(key);\n            setTimeout(function () {\n                f(completer);\n            });\n            _this._viewInitSubject.unsubscribe();\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} key\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.ResetInput = /**\n     *\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        this.SubscribeInput(key, function (completer) {\n            completer.ClearValue();\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} key\n     * @param {?} values\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.SetValues = /**\n     *\n     * @param {?} key\n     * @param {?} values\n     * @return {?}\n     */\n    function (key, values) {\n        var _this = this;\n        this.SubscribeInput(key, function (completer) {\n            completer.group.SetValues(values);\n            /**\n             * Items may have changed, need to te re-set list in completer components.\n             */\n            _this.TriggerChange();\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} key\n     * @param {?} type\n     * @param {?} template\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.SetTemplate = /**\n     *\n     * @param {?} key\n     * @param {?} type\n     * @param {?} template\n     * @return {?}\n     */\n    function (key, type, template) {\n        var _this = this;\n        this.SubscribeInput(key, function (completer) {\n            completer.group[type] = template;\n            /**\n             * Items may have changed, need to te re-set list in completer components.\n             */\n            _this.TriggerChange();\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} key\n     * @param {?} promise\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.SetAsync = /**\n     *\n     * @param {?} key\n     * @param {?} promise\n     * @return {?}\n     */\n    function (key, promise) {\n        var _this = this;\n        this.SubscribeInput(key, function (completer) {\n            completer.group.async = promise;\n            /**\n             * Items may have changed, need to te re-set list in completer components.\n             */\n            _this.TriggerChange();\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} key\n     * @param {?} id\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.SelectItem = /**\n     *\n     * @param {?} key\n     * @param {?} id\n     * @return {?}\n     */\n    function (key, id) {\n        this.SubscribeInput(key, function (completer) {\n            Object.keys(completer._items).forEach(function (key) {\n                /** @type {?} */\n                var f = \"_id_\" + String(id);\n                /** @type {?} */\n                var c = key.substring(key.indexOf(f), key.length);\n                if (f === c) {\n                    completer.SelectItem(completer._items[key]);\n                }\n            });\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @param {?} key\n     * @param {?} ids\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.RemovableValues = /**\n     *\n     * @param {?} key\n     * @param {?} ids\n     * @return {?}\n     */\n    function (key, ids) {\n        var _this = this;\n        this.SubscribeInput(key, function (completer) {\n            completer.group.Removables(ReturnStringArrayByID(ids));\n            /**\n             * Items may have changed, need to te re-set list in completer components.\n             */\n            _this.TriggerChange();\n        });\n    };\n    /**\n     *\n     */\n    /**\n     *\n     * @return {?}\n     */\n    NgAutoCompleteComponent.prototype.ResetInputs = /**\n     *\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.group.forEach(function (item) {\n            _this.ResetInput(item.key);\n        });\n    };\n    // =======================================================================//\n    // ! Static (utils)                                                       //\n    // =======================================================================//\n    /**\n     *\n     */\n    // =======================================================================//\n    // ! Static (utils)                                                       //\n    // =======================================================================//\n    /**\n     *\n     * @param {?} key\n     * @param {?} list\n     * @return {?}\n     */\n    NgAutoCompleteComponent.FindCompleter = \n    // =======================================================================//\n    // ! Static (utils)                                                       //\n    // =======================================================================//\n    /**\n     *\n     * @param {?} key\n     * @param {?} list\n     * @return {?}\n     */\n    function (key, list) {\n        /** @type {?} */\n        var completer = list.filter(function (completer) {\n            return key === completer.key;\n        });\n        if (typeof completer[0] !== 'undefined') {\n            return completer[0];\n        }\n        return null;\n    };\n    NgAutoCompleteComponent.decorators = [\n        { type: Component, args: [{\n                    selector: 'ng-auto-complete',\n                    template: \"\\n        <div #init style=\\\"display: none;\\\"><span class=\\\"after-view-init\\\"></span></div>\\n        <ng-completer [ngClass]=\\\"classes\\\" *ngFor=\\\"let item of group\\\" (cleared)=\\\"InputCleared($event)\\\"\\n                      (no-result)=\\\"NoResult($event)\\\"\\n                      (selected)=\\\"ListenToSelected($event)\\\"\\n                      [group]=\\\"item\\\"></ng-completer>\\n    \"\n                }] }\n    ];\n    /** @nocollapse */\n    NgAutoCompleteComponent.ctorParameters = function () { return [\n        { type: ChangeDetectorRef }\n    ]; };\n    NgAutoCompleteComponent.propDecorators = {\n        completers: [{ type: ViewChildren, args: [CompleterComponent,] }],\n        init: [{ type: ViewChild, args: ['init',] }],\n        selected: [{ type: Output }],\n        noResult: [{ type: Output, args: ['no-result',] }],\n        group: [{ type: Input }],\n        key: [{ type: Input }],\n        classes: [{ type: Input }]\n    };\n    return NgAutoCompleteComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar HighlightPipe = /** @class */ (function () {\n    function HighlightPipe() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} search\n     * @return {?}\n     */\n    HighlightPipe.prototype.transform = /**\n     * @param {?} text\n     * @param {?} search\n     * @return {?}\n     */\n    function (text, search) {\n        if (typeof search === 'undefined') {\n            return text;\n        }\n        /** @type {?} */\n        var pattern = search.replace(/[\\-\\[\\]\\/{}()*+?.\\\\^$|]/g, '\\\\$&');\n        pattern = pattern.split(' ').filter(function (t) { return t.length > 0; }).join('|');\n        /**\n         *\n         */\n        return text.replace(new RegExp(pattern, 'gi'), function (match) { return \"<span class=\\\"dropdown-item-highlight\\\">\" + match + \"</span>\"; });\n    };\n    HighlightPipe.decorators = [\n        { type: Pipe, args: [{\n                    name: 'highlight'\n                },] }\n    ];\n    return HighlightPipe;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar KeyValuePipe = /** @class */ (function () {\n    function KeyValuePipe() {\n    }\n    /**\n     * @param {?} value\n     * @param {?=} args\n     * @return {?}\n     */\n    KeyValuePipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?=} args\n     * @return {?}\n     */\n    function (value, args) {\n        /** @type {?} */\n        var keys = [];\n        for (var key in value) {\n            if (value.hasOwnProperty(key)) {\n                keys.push(key);\n            }\n        }\n        return keys;\n    };\n    KeyValuePipe.decorators = [\n        { type: Pipe, args: [{\n                    name: 'keys'\n                },] }\n    ];\n    return KeyValuePipe;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar PipeModule = /** @class */ (function () {\n    function PipeModule() {\n    }\n    /**\n     * @return {?}\n     */\n    PipeModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: PipeModule,\n            providers: [],\n        };\n    };\n    PipeModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [],\n                    declarations: [HighlightPipe, KeyValuePipe],\n                    exports: [HighlightPipe, KeyValuePipe],\n                },] }\n    ];\n    return PipeModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nvar NgAutoCompleteModule = /** @class */ (function () {\n    function NgAutoCompleteModule() {\n    }\n    NgAutoCompleteModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        PipeModule.forRoot()\n                    ],\n                    exports: [\n                        NgAutoCompleteComponent,\n                        CompleterComponent,\n                    ],\n                    declarations: [\n                        NgAutoCompleteComponent,\n                        CompleterComponent,\n                        NgDropdownDirective\n                    ]\n                },] }\n    ];\n    return NgAutoCompleteModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { NgAutoCompleteComponent, NgAutoCompleteModule, PipeModule, SearchableAutoCompleteItems, SearchableAutoCompleteString, ComparableAutoCompleteString, TransformToAutocompleteItem, AutocompleteItem, CreateNewAutocompleteGroup, AutocompleteGroup, ReturnStringArrayByID, FilterRemovals, IsMobileOrTablet, NotUsedKey, CompleterComponent as ɵa, NgDropdownDirective as ɵb, HighlightPipe as ɵc, KeyValuePipe as ɵd };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng['ngx-google-places-autocomplete'] = global.ng['ngx-google-places-autocomplete'] || {}),global.ng.core));\n}(this, (function (exports,_angular_core) { 'use strict';\n\nvar Options = (function () {\r\n    /**\r\n     * @param {?=} opt\r\n     */\r\n    function Options(opt) {\r\n        if (!opt)\r\n            return;\r\n        Object.assign(this, opt);\r\n    }\r\n    return Options;\r\n}());\n\nvar GooglePlaceDirective = (function () {\r\n    /**\r\n     * @param {?} el\r\n     * @param {?} ngZone\r\n     */\r\n    function GooglePlaceDirective(el, ngZone) {\r\n        this.el = el;\r\n        this.ngZone = ngZone;\r\n        this.onAddressChange = new _angular_core.EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GooglePlaceDirective.prototype.ngAfterViewInit = function () {\r\n        if (!this.options)\r\n            this.options = new Options();\r\n        this.initialize();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GooglePlaceDirective.prototype.isGoogleLibExists = function () {\r\n        return !(!google || !google.maps || !google.maps.places);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GooglePlaceDirective.prototype.initialize = function () {\r\n        var _this = this;\r\n        if (!this.isGoogleLibExists())\r\n            throw new Error(\"Google maps library can not be found\");\r\n        this.autocomplete = new google.maps.places.Autocomplete(this.el.nativeElement, this.options);\r\n        if (!this.autocomplete)\r\n            throw new Error(\"Autocomplete is not initialized\");\r\n        if (!this.autocomplete.addListener != null) {\r\n            this.eventListener = this.autocomplete.addListener('place_changed', function () {\r\n                _this.handleChangeEvent();\r\n            });\r\n        }\r\n        this.el.nativeElement.addEventListener('keydown', function (event) {\r\n            var /** @type {?} */ key = event.key.toLowerCase();\r\n            if (key == 'enter' && event.target === _this.el.nativeElement) {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n            }\r\n        });\r\n        // according to https://gist.github.com/schoenobates/ef578a02ac8ab6726487\r\n        if (window && window.navigator && window.navigator.userAgent && navigator.userAgent.match(/(iPad|iPhone|iPod)/g)) {\r\n            setTimeout(function () {\r\n                var /** @type {?} */ containers = document.getElementsByClassName('pac-container');\r\n                if (containers) {\r\n                    var /** @type {?} */ arr = Array.from(containers);\r\n                    if (arr) {\r\n                        for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\r\n                            var container = arr_1[_i];\r\n                            if (!container)\r\n                                continue;\r\n                            container.addEventListener('touchend', function (e) {\r\n                                e.stopImmediatePropagation();\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }, 500);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GooglePlaceDirective.prototype.reset = function () {\r\n        this.autocomplete.setComponentRestrictions(this.options.componentRestrictions);\r\n        this.autocomplete.setTypes(this.options.types);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    GooglePlaceDirective.prototype.handleChangeEvent = function () {\r\n        var _this = this;\r\n        this.ngZone.run(function () {\r\n            _this.place = _this.autocomplete.getPlace();\r\n            if (_this.place && _this.place.place_id) {\r\n                _this.onAddressChange.emit(_this.place);\r\n            }\r\n        });\r\n    };\r\n    GooglePlaceDirective.decorators = [\r\n        { type: _angular_core.Directive, args: [{\r\n                    selector: '[ngx-google-places-autocomplete]',\r\n                    exportAs: 'ngx-places'\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    GooglePlaceDirective.ctorParameters = function () { return [\r\n        { type: _angular_core.ElementRef, },\r\n        { type: _angular_core.NgZone, },\r\n    ]; };\r\n    GooglePlaceDirective.propDecorators = {\r\n        'options': [{ type: _angular_core.Input, args: ['options',] },],\r\n        'onAddressChange': [{ type: _angular_core.Output },],\r\n    };\r\n    return GooglePlaceDirective;\r\n}());\n\nvar GooglePlaceModule = (function () {\r\n    function GooglePlaceModule() {\r\n    }\r\n    GooglePlaceModule.decorators = [\r\n        { type: _angular_core.NgModule, args: [{\r\n                    declarations: [GooglePlaceDirective],\r\n                    exports: [GooglePlaceDirective]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    GooglePlaceModule.ctorParameters = function () { return []; };\r\n    return GooglePlaceModule;\r\n}());\n\nexports.GooglePlaceModule = GooglePlaceModule;\nexports.GooglePlaceDirective = GooglePlaceDirective;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { Observable } from 'rxjs';\nimport { _catch } from '../../operator/catch';\nObservable.prototype.catch = _catch;\nObservable.prototype._catch = _catch;\n//# sourceMappingURL=catch.js.map","import { Observable } from 'rxjs';\nimport { map } from '../../operator/map';\nObservable.prototype.map = map;\n//# sourceMappingURL=map.js.map","import { catchError as higherOrder } from 'rxjs/operators';\nexport function _catch(selector) {\n    return higherOrder(selector)(this);\n}\n//# sourceMappingURL=catch.js.map","import { map as higherOrderMap } from 'rxjs/operators';\nexport function map(project, thisArg) {\n    return higherOrderMap(project, thisArg)(this);\n}\n//# sourceMappingURL=map.js.map"],"sourceRoot":""}