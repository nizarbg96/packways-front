{"version":3,"sources":["webpack:///./node_modules/agm-direction/fesm5/agm-direction.js","webpack:///./src/app/layout/map-trips/map-trips-routing.module.ts","webpack:///./src/app/layout/map-trips/map-trips.component.html","webpack:///./src/app/layout/map-trips/map-trips.component.scss","webpack:///./src/app/layout/map-trips/map-trips.component.ts","webpack:///./src/app/layout/map-trips/map-trips.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAChC;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,8BAA8B,0DAAY;AAC1C;AACA,kCAAkC,0DAAY;AAC9C;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,uBAAuB,EAAE;AACxF;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,uBAAuB,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;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","file":"map-trips-map-trips-module.js","sourcesContent":["import { Directive, Input, Output, EventEmitter, NgModule } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar AgmDirection = /** @class */ (function () {\n    function AgmDirection(gmapsApi) {\n        this.gmapsApi = gmapsApi;\n        // Options\n        this.travelMode = 'DRIVING';\n        this.transitOptions = undefined;\n        this.drivingOptions = undefined;\n        this.waypoints = [];\n        this.optimizeWaypoints = true;\n        this.provideRouteAlternatives = false;\n        this.avoidHighways = false;\n        this.avoidTolls = false;\n        // Remove or draw direction\n        this.visible = true;\n        // Direction change event handler\n        this.onChange = new EventEmitter();\n        // Direction response for the new request\n        this.onResponse = new EventEmitter();\n        // Send a custom infowindow\n        this.sendInfoWindow = new EventEmitter();\n        // Status of Directions Query (google.maps.DirectionsStatus.OVER_QUERY_LIMIT)\n        this.status = new EventEmitter();\n        this.directionsService = undefined;\n        this.directionsDisplay = undefined;\n        this.waypointsMarker = [];\n        // Use for visible flag\n        this.isFirstChange = true;\n    }\n    /**\n     * @return {?}\n     */\n    AgmDirection.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.visible === true) {\n            this.directionDraw();\n        }\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    AgmDirection.prototype.ngOnChanges = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        /**\n         * When visible is false then remove the direction layer\n         */\n        if (!this.visible) {\n            try {\n                if (typeof this.originMarker !== 'undefined') {\n                    this.originMarker.setMap(null);\n                    this.destinationMarker.setMap(null);\n                    this.waypointsMarker.forEach(function (w) { return w.setMap(null); });\n                }\n                this.directionsDisplay.setPanel(null);\n                this.directionsDisplay.setMap(null);\n                this.directionsDisplay = undefined;\n            }\n            catch (e) { }\n        }\n        else {\n            if (this.isFirstChange) {\n                /**\n                 * When visible is false at the first time\n                 */\n                if (typeof this.directionsDisplay === 'undefined') {\n                    this.directionDraw();\n                }\n                this.isFirstChange = false;\n                return;\n            }\n            /**\n             * When renderOptions are not first change then reset the display\n             */\n            if (typeof obj.renderOptions !== 'undefined') {\n                if (obj.renderOptions.firstChange === false) {\n                    if (typeof this.originMarker !== 'undefined') {\n                        this.originMarker.setMap(null);\n                        this.destinationMarker.setMap(null);\n                        this.waypointsMarker.forEach(function (w) { return w.setMap(null); });\n                    }\n                    this.directionsDisplay.setPanel(null);\n                    this.directionsDisplay.setMap(null);\n                    this.directionsDisplay = undefined;\n                }\n            }\n            this.directionDraw();\n        }\n    };\n    /**\n     * This event is fired when the user creating or updating this direction\n     */\n    /**\n     * This event is fired when the user creating or updating this direction\n     * @return {?}\n     */\n    AgmDirection.prototype.directionDraw = /**\n     * This event is fired when the user creating or updating this direction\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.gmapsApi.getNativeMap().then(function (map) {\n            if (typeof _this.directionsDisplay === 'undefined') {\n                _this.directionsDisplay = new google.maps.DirectionsRenderer(_this.renderOptions);\n                _this.directionsDisplay.setMap(map);\n                _this.directionsDisplay.addListener('directions_changed', function () {\n                    _this.onChange.emit(_this.directionsDisplay.getDirections());\n                });\n            }\n            if (typeof _this.directionsService === 'undefined') {\n                _this.directionsService = new google.maps.DirectionsService;\n            }\n            if (typeof _this.panel === 'undefined') {\n                _this.directionsDisplay.setPanel(null);\n            }\n            else {\n                _this.directionsDisplay.setPanel(_this.panel);\n            }\n            // Render exist direction\n            if (typeof _this.renderRoute === 'object' && _this.renderRoute !== null) {\n                _this.directionsDisplay.setDirections(_this.renderRoute);\n                _this.renderRoute = null; // or set undefined, ''\n            }\n            else {\n                // Request new direction\n                _this.directionsService.route({\n                    origin: _this.origin,\n                    destination: _this.destination,\n                    travelMode: _this.travelMode,\n                    transitOptions: _this.transitOptions,\n                    drivingOptions: _this.drivingOptions,\n                    waypoints: _this.waypoints,\n                    optimizeWaypoints: _this.optimizeWaypoints,\n                    provideRouteAlternatives: _this.provideRouteAlternatives,\n                    avoidHighways: _this.avoidHighways,\n                    avoidTolls: _this.avoidTolls,\n                }, function (response, status) {\n                    _this.onResponse.emit(response);\n                    // Emit Query Status\n                    _this.status.emit(status);\n                    /**\n                     * DirectionsStatus\n                     * https://developers.google.com/maps/documentation/javascript/directions#DirectionsStatus\n                     */\n                    switch (status) {\n                        case 'OK':\n                            _this.directionsDisplay.setDirections(response);\n                            /**\n                             * Emit The DirectionsResult Object\n                             * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\n                             */\n                            // Custom Markers\n                            if (typeof _this.markerOptions !== 'undefined') {\n                                // Remove origin markers\n                                try {\n                                    if (typeof _this.originMarker !== 'undefined') {\n                                        google.maps.event.clearListeners(_this.originMarker, 'click');\n                                        _this.originMarker.setMap(null);\n                                    }\n                                    if (typeof _this.destinationMarker !== 'undefined') {\n                                        google.maps.event.clearListeners(_this.destinationMarker, 'click');\n                                        _this.destinationMarker.setMap(null);\n                                    }\n                                    _this.waypointsMarker.forEach(function (w) {\n                                        if (typeof w !== 'undefined') {\n                                            google.maps.event.clearListeners(w, 'click');\n                                            w.setMap(null);\n                                        }\n                                    });\n                                }\n                                catch (err) {\n                                    console.error('Can not reset custom marker.', err);\n                                }\n                                // Set custom markers\n                                /** @type {?} */\n                                var _route_1 = response.routes[0].legs[0];\n                                try {\n                                    // Origin Marker\n                                    if (typeof _this.markerOptions.origin !== 'undefined') {\n                                        _this.markerOptions.origin.map = map;\n                                        _this.markerOptions.origin.position = _route_1.start_location;\n                                        _this.originMarker = _this.setMarker(map, _this.originMarker, _this.markerOptions.origin, _route_1.start_address);\n                                    }\n                                    // Destination Marker\n                                    if (typeof _this.markerOptions.destination !== 'undefined') {\n                                        _this.markerOptions.destination.map = map;\n                                        _this.markerOptions.destination.position = _route_1.end_location;\n                                        _this.destinationMarker = _this.setMarker(map, _this.destinationMarker, _this.markerOptions.destination, _route_1.end_address);\n                                    }\n                                    // Waypoints Marker\n                                    if (typeof _this.markerOptions.waypoints !== 'undefined') {\n                                        _this.waypoints.forEach(function (waypoint, index) {\n                                            // If waypoints are not array then set all the same\n                                            if (!Array.isArray(_this.markerOptions.waypoints)) {\n                                                _this.markerOptions.waypoints.map = map;\n                                                _this.markerOptions.waypoints.position = _route_1.via_waypoints[index];\n                                                _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints, _route_1.via_waypoints[index]));\n                                            }\n                                            else {\n                                                _this.markerOptions.waypoints[index].map = map;\n                                                _this.markerOptions.waypoints[index].position = _route_1.via_waypoints[index];\n                                                _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints[index], _route_1.via_waypoints[index]));\n                                            }\n                                        }); // End forEach\n                                    }\n                                }\n                                catch (err) {\n                                    console.error('MarkerOptions error.', err);\n                                }\n                            }\n                            break;\n                        default:\n                            // console.warn(status);\n                            break;\n                    } // End switch\n                });\n            }\n        });\n    };\n    /**\n     * Custom Origin and Destination Icon\n     * @param map map\n     * @param marker marker\n     * @param markerOpts properties\n     * @param content marker's infowindow content\n     * @returns new marker\n     * @memberof AgmDirection\n     */\n    /**\n     * Custom Origin and Destination Icon\n     * \\@memberof AgmDirection\n     * @param {?} map map\n     * @param {?} marker marker\n     * @param {?} markerOpts properties\n     * @param {?} content marker's infowindow content\n     * @return {?} new marker\n     */\n    AgmDirection.prototype.setMarker = /**\n     * Custom Origin and Destination Icon\n     * \\@memberof AgmDirection\n     * @param {?} map map\n     * @param {?} marker marker\n     * @param {?} markerOpts properties\n     * @param {?} content marker's infowindow content\n     * @return {?} new marker\n     */\n    function (map, marker, markerOpts, content) {\n        var _this = this;\n        if (typeof this.infoWindow === 'undefined') {\n            this.infoWindow = new google.maps.InfoWindow({});\n            this.sendInfoWindow.emit(this.infoWindow);\n        }\n        marker = new google.maps.Marker(markerOpts);\n        marker.addListener('click', function () {\n            /** @type {?} */\n            var infowindoContent = typeof markerOpts.infoWindow === 'undefined' ? content : markerOpts.infoWindow;\n            _this.infoWindow.setContent(infowindoContent);\n            _this.infoWindow.open(map, marker);\n        });\n        return marker;\n    };\n    AgmDirection.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-direction',\n                },] }\n    ];\n    /** @nocollapse */\n    AgmDirection.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper }\n    ]; };\n    AgmDirection.propDecorators = {\n        origin: [{ type: Input }],\n        destination: [{ type: Input }],\n        travelMode: [{ type: Input }],\n        transitOptions: [{ type: Input }],\n        drivingOptions: [{ type: Input }],\n        waypoints: [{ type: Input }],\n        optimizeWaypoints: [{ type: Input }],\n        provideRouteAlternatives: [{ type: Input }],\n        avoidHighways: [{ type: Input }],\n        avoidTolls: [{ type: Input }],\n        renderOptions: [{ type: Input }],\n        panel: [{ type: Input }],\n        markerOptions: [{ type: Input }],\n        infoWindow: [{ type: Input }],\n        visible: [{ type: Input }],\n        renderRoute: [{ type: Input }],\n        onChange: [{ type: Output }],\n        onResponse: [{ type: Output }],\n        sendInfoWindow: [{ type: Output }],\n        status: [{ type: Output }]\n    };\n    return AgmDirection;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar AgmDirectionModule = /** @class */ (function () {\n    function AgmDirectionModule() {\n    }\n    /**\n     * @return {?}\n     */\n    AgmDirectionModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: AgmDirectionModule,\n        };\n    };\n    AgmDirectionModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [],\n                    declarations: [\n                        AgmDirection,\n                    ],\n                    exports: [\n                        AgmDirection,\n                    ]\n                },] }\n    ];\n    return AgmDirectionModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { AgmDirectionModule, AgmDirection as ɵa };\n//# sourceMappingURL=agm-direction.js.map\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MapTripsComponent } from './map-trips.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: MapTripsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class MapTripsRoutingModule {\r\n}\r\n","module.exports = \"<div [@routerTransition]>\\n        <div class=\\\"row\\\">            \\n                <div id=\\\"map\\\"></div>\\n                <div id=\\\"right-panel\\\">\\n                  <p>Total Distance: <span id=\\\"total\\\"></span></p>\\n                </div>   \\n        </div>\\n</div>  \\n    \"","module.exports = \"agm-map {\\n  height: 400px;\\n  width: 100%; }\\n\\n#map {\\n  height: 400px;\\n  width: 100%; }\\n\\n#map-canvas {\\n  height: 400px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L21hcC10cmlwcy9EOlxcTmV3UGFja3dheXNXZWJcXGRvdHdheXMvc3JjXFxhcHBcXGxheW91dFxcbWFwLXRyaXBzXFxtYXAtdHJpcHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFhO0VBQ2IsWUFBVyxFQUNkOztBQUVEO0VBQ0ksY0FBYTtFQUNiLFlBQVcsRUFDZDs7QUFFRDtFQUNJLGNBQVksRUFDZiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9tYXAtdHJpcHMvbWFwLXRyaXBzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7XHJcbiAgICBoZWlnaHQ6IDQwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbiNtYXAge1xyXG4gICAgaGVpZ2h0OiA0MDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4jbWFwLWNhbnZhcyB7XHJcbiAgICBoZWlnaHQ6NDAwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { InfoWindow } from '@agm/core/services/google-maps-types';\nimport { MapsAPILoader, AgmMap } from '@agm/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core/services';\n@Component({\n  selector: 'app-map-trips',\n  templateUrl: './map-trips.component.html',\n  styleUrls: ['./map-trips.component.scss'],\n  animations: [routerTransition()]\n})\nexport class MapTripsComponent implements OnInit {\n\nlat: number = 33.667090;\nlng: number = 10.016560;\n\npublic origin: any;\npublic destination: any;\n\npublic renderOptions: object = { polylineOptions: { strokeColor: '#f0f' }, draggable: true, };\n\npublic origin1: Object = { lat: 33.667090, lng: 10.016560 };\npublic destination1: Object = { lat: 36.716927, lng: 10.370461 };\n\npublic origin2: Object = { lat: 36.716927, lng: 10.370461 };\npublic destination2: Object = { lat: 35.789524, lng: 10.972017 };\n\npublic travelMode = 'DRIVING';\npublic transitOptions: any = undefined;\npublic drivingOptions: any = undefined;\n\npublic optimizeWaypoints = true;\npublic provideRouteAlternatives = true;\npublic avoidHighways = true;\npublic avoidTolls = true;\npublic visible = true;\npublic panel: object | undefined;\n\npublic waypoints: object = [\n  {\n      location: { lat: 34.667090, lng: 10.716560 },\n      stopover: true,\n  }];\n\npublic markerOptions = {\n  origin: {\n    draggable: true,\n    infoWindow: 'This is origin.',\n  },\n  destination: {\n      draggable: true,\n      infoWindow: `<h4>Hello<h4>`,\n      label: 'marker label',\n      opacity: 0.8,\n  },\n  waypoints: {\n    icon: 'https://www.shareicon.net/data/32x32/2016/04/28/756617_face_512x512.png',\n    label: 'marker label',\n    opacity: 0.8,\n},\n};\n\nmarkers = [\n  { latitude: 52.228973, longitude: 20.728218, draggable: true }\n  ];\n\npublic infoWindow: InfoWindow = undefined;\n\n  citymap = {\n  chicago: {\n    center: {lat: 41.878, lng: -87.629},\n    population: 2714856\n  },\n  newyork: {\n    center: {lat: 40.714, lng: -74.005},\n    population: 8405837\n  },\n  losangeles: {\n    center: {lat: 34.052, lng: -118.243},\n    population: 3857799\n  },\n  vancouver: {\n    center: {lat: 49.25, lng: -123.1},\n    population: 603502\n  }\n};\n\n\n  constructor() { }\n\n  ngOnInit() {\n    //this.getDirection();\n    this.initMap();\n  }\n\n  getDirection() {\n    this.origin = { lat: 33.667090, lng: 10.016560 };\n    this.destination = { lat: 36.716927, lng: 10.370461 };\n\n    // this.origin = 'Taipei Main Station'\n    // this.destination = 'Taiwan Presidential Office'\n  }\n\n  getStatus(status) {\n    console.log('status', status);\n  }\n\n  public obtainInfowindow(window: InfoWindow) {\n    this.infoWindow = window;\n }\n\n public change(event: any) {\n  this.waypoints = event.request.waypoints;\n}\n\nplaceMarker(position: any) {\n  const lat = position.coords.lat;\n  const lng = position.coords.lng;\n\n  this.markers.push({ latitude: lat, longitude: lng, draggable: true });\n  }\n\n  initMap() {\n    var map = new google.maps.Map(document.getElementById('map'), {\n      zoom: 4,\n      center: {lat: -24.345, lng: 134.46}  // Australia.\n    });\n\n    var directionsService = new google.maps.DirectionsService;\n    var directionsDisplay = new google.maps.DirectionsRenderer({\n      draggable: true,\n      map: map,\n      panel: document.getElementById('right-panel')\n    });\n\n    directionsDisplay.addListener('directions_changed', function() {\n      let rslt: any = directionsDisplay.getDirections();\n      console.log('rslt: ', rslt);\n      //this.computeTotalDistance(rslt);\n    });\n\n    this.displayRoute('Perth, WA', 'Sydney, NSW', directionsService, directionsDisplay);\n   // this.addCircle(map);\n  }\n\n  displayRoute(origin, destination, service, display) {\n    service.route({\n      origin: origin,\n      destination: destination,\n      //waypoints: [{location: 'Adelaide, SA'}, {location: 'Broken Hill, NSW'}], \n      waypoints: [{location: 'Adelaide, SA'}, {location: 'Broken Hill, NSW'}],\n      travelMode: 'DRIVING',\n      avoidTolls: true\n    }, function(response, status) {\n      if (status === 'OK') {\n        display.setDirections(response);\n      } else {\n        alert('Could not display directions due to: ' + status);\n      }\n    });\n  }\n\n  computeTotalDistance(result) {\n    console.log('result: ', result);\n    var total = 0;\n    var myroute = result.routes[0];\n    for (var i = 0; i < myroute.legs.length; i++) {\n      total += myroute.legs[i].distance.value;\n    }\n    total = total / 1000;\n    document.getElementById('total').innerHTML = total + ' km';\n  }\n\n  addCircle(map) {\n    // tslint:disable-next-line:forin\n    for (var city in this.citymap) {\n      // Add the circle for this city to the map.\n      let cityCircle = new google.maps.Circle({\n        strokeColor: '#FF0000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        map: map,\n        center: this.citymap[city].center,\n        radius: Math.sqrt(this.citymap[city].population) * 100\n      });\n    }\n  }\n\n}\n\ninterface marker {\n\tlat: number;\n\tlng: number;\n\tlabel?: string;\n\tdraggable: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AgmCoreModule } from '@agm/core';            // @agm/core\nimport { AgmDirectionModule } from 'agm-direction';   // agm-direction\nimport { MapTripsComponent } from './map-trips.component';\nimport { MapTripsRoutingModule } from './map-trips-routing.module';\nimport { environment } from 'src/environments/environment';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MapTripsRoutingModule,\n    AgmCoreModule.forRoot({ // @agm/core\n      apiKey: environment.googleAPIKey,\n    }),\n    AgmDirectionModule\n  ],\n  declarations: [MapTripsComponent]\n})\nexport class MapTripsModule { }\n"],"sourceRoot":""}